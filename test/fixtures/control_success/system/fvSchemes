/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.0                                 |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      fvSchemes;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

ddtSchemes
{
    default	    Euler; //Options are Euler, backward
}

gradSchemes
{
    default               Gauss linear;
    grad(p_rgh)           Gauss linear;
    grad(U)               Gauss linear;
    grad(alpha)	          Gauss linear; //New Variable
    grad(k)		  Gauss linear;
    grad(epsilon)	  Gauss linear;
    grad(omega)		  Gauss linear;
    grad(nuTilda)	  Gauss linear;
    grad(magSqr(U))	  Gauss linear;
    snGradCorr(U)         Gauss linear;
    snGradCorr(p_rgh)     Gauss linear;    
    snGradCorr(k)         Gauss linear;
    snGradCorr(epsilon)   Gauss linear;
    snGradCorr(omega)     Gauss linear;
    snGradCorr(nuTilda)   Gauss linear;
}

divSchemes
{
    default          none;
    div(rho*phi,U)  Gauss upwind;
    div(phi,alpha)  Gauss vanLeer;
    div(phirb,alpha) Gauss interfaceCompression;
    div(phi,k)       Gauss upwind;
    div(phi,epsilon) Gauss upwind;
    div(phi,omega) Gauss 1.0;
    div(phi,nuTilda) Gauss 1.0;
    div((nuEff*dev(grad(U).T()))) Gauss linear;
}

laplacianSchemes
{
    default         	none;
    laplacian(1,p_rgh)     Gauss linear corrected;
    laplacian(interpolate((1|A(U))),p_rgh)  Gauss linear corrected;
    laplacian(muEff,U) Gauss linear corrected;
    laplacian(DkEff,k) Gauss linear limited 0.5;
    laplacian(DepsilonEff,epsilon) Gauss linear limited 0.5;
    laplacian(DomegaEff,omega) Gauss 1.0;
    laplacian(DnuTildaEff,nuTilda) Gauss 1.0;
    laplacian((1|A(U)),pcorr) Gauss linear corrected;
}

interpolationSchemes
{
    default         linear;
    interpolate(HbyA) linear;
}

snGradSchemes
{
    default         limited 0.5;
}

fluxRequired
{
    default         no;
    p_rgh;
    pcorr;
    alpha;
}

// ************************************************************************* //
